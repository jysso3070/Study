WinSock
  유닉스/리눅스는 소켓을 파일로 구성
  Windodws는 소켓을 객체로 인식한다.(속도 이점)

TCP서버 클라이언트 동작원리
  소켓으로 통신을 할때 listen소켓, connect소켓, accept소켓 세개를 생성해서 통신한다.
  TCP연결 절차가 끝나면 새로운 소켓을 생성해서 기존의 소켓이 새로운 클라이언트 접속을 수용하는 용도로 사용
  서버에는 총 3개의 소켓이 존재하고 그 중 두개는 접속한 클라이언트와 통신하는 용도로 사용한다

  포트번호 설정은 운영체제가 비어있는 포트번호로 설정
  서버가 소켓 2개 클라이언트가 소켓 1개를 생성하여 통신

TCP 서버함수
bind() 함수 사용예
  INADDR_ANY -> 모든 주소를 기다림
accept() 함수
  backlog: 서버가 당장 처리하지 않아도 접속가능한 클라이언트 개수
   - 서버가 당장 처리하지 않음, 즉 accept를 호출하지 않음

TCP클라이언트 함수
  클라이언트에서는 bind를 사용하지않는다(운영체제에서 알아서 포트번호를 설정해주기때문에)

데이터전송함수
  send() 함수
   - 첫번쩨 인자로 전달되는 소켓의 특성에 따라 블로킹/논블로킹 소켓 값으로 리턴할 수 있음
  recv() 함수
   소켓버퍼에 있는 값을 가져오는 역할
  recvn() 함수 : 사용자 정의 함수



서버 핵심함수 bind listen accept 
클라이언트 핵심함수는 connect 

송신버퍼는 데이터를 전송하기 전에 임시 저장
수신버퍼는 받은 데이터를 응용프로그램에서 처리하기 전에 임시저장

recv 받은 데이터를 응용프로그램 버퍼로 복사하는것


클라이언트에서 bind를 사용해서 포트를 사용자가 직접 설정해서 사용하면 첫 연결시에는 연결이 되지만
연결이 끝난후 포트번호가 time wait로 대기 상태로 남아있기 때문에 다음연결시에는 포트번호가 사용중이어서
연결이 불가능하다

   